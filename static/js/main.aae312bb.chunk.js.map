{"version":3,"sources":["components/task/index.js","components/theme/index.js","components/buttonsPanel/index.js","components/dialog/index.js","store/actions/global.js","store/actions/actionTypes.js","components/loading/index.js","services/api.js","store/actions/tasks.js","components/searchBox/index.js","components/taskPanel/index.js","pages/tasks/index.js","App.js","serviceWorker.js","store/reducers/tasks.js","store/reducers/global.js","index.js","components/taskPanel/style.module.css","components/task/style.module.css","components/buttonsPanel/style.module.css","pages/tasks/style.module.css"],"names":["Task","task","selected","onSelected","Card","className","classes","style","backgroundColor","onClick","_id","CardActionArea","CardContent","Typography","gutterBottom","variant","component","title","color","desc","Theme","createMuiTheme","palette","white","main","background","ButtonsPanel","props","container","selectedId","IconButton","size","onDeleteTask","fontSize","onMoveTask","onOpenDialog","MyDialog","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","children","setLoading","loading","type","Loading","isLoading","useSelector","state","global","minHeight","LinearProgress","ApiLoading","axios","defaults","baseURL","dispatch","useDispatch","interceptors","request","use","config","response","toast","dismiss","error","status","data","includes","Promise","reject","get","post","put","delete","patch","add","update","del","id","getTasks","a","api","tasks","addTask","updateTaskType","deleteTask","SearchBox","onSearchFinished","margin","TextField","fullWidth","label","onChange","event","keyword","target","value","trim","toLowerCase","filter","x","TaskPanel","panel","panelTasks","useState","filteredTasks","setFilteredTasks","isDialogOpen","setDialogOpen","setTitle","setDesc","selectedTaskId","setSelectedTaskId","handleTaskClick","handleAddTask","handleMoveTask","handleDeleteTask","tasksToShow","Paper","elevation","header","result","map","key","DialogContent","FormControl","autoFocus","e","rows","multiline","DialogActions","Button","taskPanels","Tasks","useEffect","fetchData","Grid","spacing","item","md","xs","App","Boolean","window","location","hostname","match","initState","reducer","action","concat","reducers","combineReducers","tasksReducer","globalReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.aae312bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {  Typography,  Card,  CardContent,  CardActionArea,} from \"@material-ui/core\";\r\nimport classes from \"./style.module.css\";\r\n\r\nconst Task = ({ task, selected , onSelected }) => {\r\n  return (\r\n    <Card\r\n      className={classes.task}\r\n      style={selected ? { backgroundColor: '#fff176' } : null}\r\n      onClick = {() => onSelected(task._id)}\r\n    >\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {task.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {task.desc}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Create a theme instance.\r\nconst Theme = createMuiTheme({\r\n  palette: {\r\n    white: {\r\n      main: \"#ffffff\",\r\n      background: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default Theme;\r\n","import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport classes from \"./style.module.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ArrowIcon from \"@material-ui/icons/ArrowForward\";\r\n\r\nimport Theme from \"../theme\";\r\nconst ButtonsPanel = (props) => {\r\n  return (\r\n    <div className={classes.container}>\r\n      {!props.selectedId ? (\r\n        <IconButton\r\n          style={Theme.palette.white}\r\n          size=\"small\"\r\n          onClick={props.onOpenDialog}\r\n        >\r\n          <AddIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n      ) : (\r\n        <>\r\n          <IconButton\r\n            style={Theme.palette.white}\r\n            size=\"small\"\r\n            onClick={props.onDeleteTask}\r\n          >\r\n            <DeleteIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n          &nbsp;\r\n          <IconButton\r\n            style={Theme.palette.white}\r\n            size=\"small\"\r\n            onClick={props.onMoveTask}\r\n          >\r\n            <ArrowIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonsPanel;\r\n","import React from \"react\";\r\nimport {useTheme,useMediaQuery} from \"@material-ui/core\";\r\nimport {Dialog} from \"@material-ui/core\";\r\n\r\nconst MyDialog = (props) => {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <Dialog open={props.open} fullScreen={fullScreen}>\r\n        {props.children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MyDialog;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setLoading = (loading) => {\r\n  return { type: actionTypes.GLOBAL_SET_LOADING, loading: loading };\r\n};","export const TASKS_LOAD_TASKS = 'TASKS_LOAD_TASKS';\r\nexport const TASKS_ADD_TASK = 'TASKS_ADD_TASK';\r\nexport const TASKS_UPDATE_TASK = 'TASKS_UPDATE_TASK';\r\nexport const TASKS_DELETE_TASK = 'TASKS_DELETE_TASK';\r\n\r\nexport const GLOBAL_SET_LOADING = 'GLOBAL_SET_LOADING'\r\n","import React from \"react\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Loading = () => {\r\n  const isLoading = useSelector((state) => state.global.isLoading);\r\n  return (\r\n    <div style={{ minHeight: 10 }}>\r\n      {isLoading ? <LinearProgress color=\"secondary\" /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLoading } from \"../store/actions/global\";\r\nimport Loading from \"./../components/loading/index\";\r\nimport React from \"react\";\r\n\r\nexport const ApiLoading = () => {\r\n  axios.defaults.baseURL = \"https://bitbirdtodo.herokuapp.com/api/\";\r\n\r\n  const dispatch = useDispatch();\r\n  axios.interceptors.request.use((config) => {\r\n    dispatch(setLoading(true));\r\n    return config;\r\n  });\r\n\r\n  axios.interceptors.response.use(\r\n    (response) => {\r\n      toast.dismiss();\r\n      dispatch(setLoading(false));\r\n      return response;\r\n    },\r\n    (error) => {\r\n      dispatch(setLoading(false));\r\n      toast.dismiss();\r\n\r\n      const expectedError =\r\n        error.response &&\r\n        error.response.status >= 400 &&\r\n        error.response.status <= 500;\r\n\r\n      if (expectedError) {\r\n        if (error.response.status === 400)\r\n          toast.error(`Invalid Data ${error.response.data}`);\r\n        if (error.response.status === 404) toast.error(`Not Found`);\r\n        else if (error.response.status === 500) toast.error(\"Internal Server\");\r\n      } else {\r\n        if ((error + \"\").includes(\"Network\")) toast.error(\"Network Error\");\r\n        else toast.error(\"UnExpected Error\");\r\n      }\r\n\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return <Loading />;\r\n};\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  patch: axios.patch,\r\n  ApiLoading: ApiLoading,\r\n};\r\n","import api from \"../../services/api\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nconst set = (tasks) => {\r\n  return { type: actionTypes.TASKS_LOAD_TASKS, tasks: tasks };\r\n};\r\n\r\nconst add = (task) => {\r\n  return { type: actionTypes.TASKS_ADD_TASK, task: task };\r\n};\r\n\r\nconst update = (task) => {\r\n  return { type: actionTypes.TASKS_UPDATE_TASK, task: task };\r\n};\r\n\r\nconst del = (id) => {\r\n  return { type: actionTypes.TASKS_DELETE_TASK, id: id };\r\n}\r\n\r\nexport const getTasks = async () => {\r\n  const { data } = await api.get(\"tasks\");\r\n  return (dispatch) => {\r\n    dispatch(set(data));\r\n  };\r\n};\r\n\r\nexport const addTask = async (task) => {\r\n  const { data } = await api.post(\"tasks\", task);\r\n  return (dispatch) => {\r\n    dispatch(add(data));\r\n  };\r\n};\r\n\r\nexport const updateTaskType = async (task) => {\r\n  task.type += 1;\r\n  await api.patch(`tasks/${task._id}`, { type: task.type });\r\n  return (dispatch) => {\r\n    dispatch(update(task));\r\n  };\r\n};\r\n\r\nexport const deleteTask  = async id =>\r\n{\r\n  await api.delete(`tasks/${id}`);\r\n  return (dispatch) => {\r\n    dispatch(del(id));\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst SearchBox = ({ data, onSearchFinished }) => {\r\n  const handleChange = (event) => {\r\n    const keyword = event.target.value.trim().toLowerCase();\r\n    if (keyword === \"\") return onSearchFinished(null);\r\n    onSearchFinished(\r\n      data.filter(\r\n        (x) =>\r\n          x.title.toLowerCase().includes(keyword) ||\r\n          x.desc.toLowerCase().includes(keyword)\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"white\" , margin:2 }}>\r\n      <TextField\r\n        fullWidth\r\n        id=\"outlined-basic\"\r\n        label=\"Search...\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\nimport {  Paper,  Typography,  FormControl,  DialogContent,  DialogActions,  Button,  TextField,} from \"@material-ui/core\";\r\nimport classes from \"./style.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Task from \"../task\";\r\nimport ButtonsPanel from \"../buttonsPanel\";\r\nimport Dialog from \"../dialog\";\r\nimport { addTask, updateTaskType, deleteTask } from \"../../store/actions/tasks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SearchBox from \"../searchBox\";\r\n\r\nconst TaskPanel = ({ panel }) => {\r\n\r\n  const tasks = useSelector(state => state.tasks.tasks);\r\n  const panelTasks = tasks.filter((x) => x.type === panel.type);\r\n  const [filteredTasks, setFilteredTasks] = useState(null);\r\n\r\n  const [isDialogOpen, setDialogOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\r\n\r\n  const handleOpenDialog = () => setDialogOpen(true);\r\n\r\n  const handleTaskClick = (id) => {\r\n    setSelectedTaskId(selectedTaskId === id ? null : id);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const handleAddTask = async () => {\r\n    dispatch(await addTask({ title: title, desc: desc, type: panel.type }));\r\n    setTitle('');\r\n    setDesc('');\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  const handleMoveTask = async () => {\r\n    dispatch(\r\n      await updateTaskType(panelTasks.filter((x) => x._id === selectedTaskId)[0])\r\n    );\r\n    setSelectedTaskId(null);\r\n  };\r\n\r\n  const handleDeleteTask = async () => {\r\n    dispatch(await deleteTask(selectedTaskId));\r\n    setSelectedTaskId(null);\r\n  };\r\n\r\n  const handleSearchFinished = (result) => {\r\n    setFilteredTasks(result);\r\n  };\r\n  \r\n  const tasksToShow = filteredTasks ? filteredTasks : panelTasks; \r\n  \r\n  return (\r\n    <>\r\n      <Paper\r\n        elevation={3}\r\n        className={classes.container}\r\n        style={{ backgroundColor: panel.color }}\r\n      >\r\n        <Typography variant=\"h6\" component=\"h6\" className={classes.header}>\r\n          {`#${panel.title}`}\r\n\r\n          <ButtonsPanel\r\n            onOpenDialog={handleOpenDialog}\r\n            selectedId={selectedTaskId}\r\n            onMoveTask={handleMoveTask}\r\n            onDeleteTask={handleDeleteTask}\r\n          />\r\n        </Typography>\r\n        <SearchBox data={[...panelTasks]} onSearchFinished={handleSearchFinished} />\r\n        {tasksToShow.map((task, key) => (\r\n          <Task\r\n            task={task}\r\n            key={key}\r\n            selected={selectedTaskId === task._id}\r\n            onSelected={handleTaskClick}\r\n          />\r\n        ))}\r\n      </Paper>\r\n\r\n      <Dialog open={isDialogOpen}>\r\n        <DialogContent>\r\n          <FormControl>\r\n            <TextField\r\n              value={title}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Task Title\"\r\n              fullWidth\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <TextField\r\n              value={desc}\r\n              margin=\"dense\"\r\n              id=\"desc\"\r\n              label=\"Task Description\"\r\n              rows={4}\r\n              fullWidth\r\n              multiline\r\n              variant=\"outlined\"\r\n              onChange={(e) => setDesc(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDialogOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" onClick={() => handleAddTask()}>\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskPanel;\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TaskPanel from \"../../components/taskPanel\";\r\nimport classes from \"./style.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getTasks } from \"../../store/actions/tasks\";\r\n\r\nconst taskPanels = [\r\n  { title: \"ToDo\", type: 1, color: \"#80d8ff\" },\r\n  { title: \"Doing\", type: 2, color: \"#ffa726\" },\r\n  { title: \"Done\", type: 3, color: \"#64ffda\" },\r\n];\r\nconst Tasks = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch(await getTasks());\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2} className={classes.container}>\r\n      {taskPanels.map((panel, key) => (\r\n        <Grid key={key} item md={4} xs={12}>\r\n          <TaskPanel panel={panel} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from 'react';\r\nimport Tasks from './pages/tasks'\r\nimport 'fontsource-roboto';\r\nimport {ApiLoading} from './services/api'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ApiLoading />\r\n      <Tasks />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initState = {\r\n  tasks: [],\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TASKS_LOAD_TASKS:\r\n      return { ...state, tasks: action.tasks };\r\n    case actionTypes.TASKS_ADD_TASK:\r\n      return { ...state, tasks: state.tasks.concat(action.task) };\r\n    case actionTypes.TASKS_DELETE_TASK:\r\n      return { ...state, tasks: state.tasks.filter(x => x._id !== action.id) };\r\n    case actionTypes.TASKS_UPDATE_TASK:\r\n      return { ...state, tasks: (state.tasks.filter(x => x._id !== action.task._id)).concat(action.task) };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initState = {\r\n    isLoading: false,\r\n  };\r\n\r\n  const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GLOBAL_SET_LOADING:\r\n          return { ...state, isLoading: action.loading };\r\n        default:\r\n          return state;\r\n      }\r\n  }\r\n   \r\n  export default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { createStore, applyMiddleware,  combineReducers } from \"redux\";\nimport tasksReducer from \"./store/reducers/tasks\";\nimport globalReducer from \"./store/reducers/global\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Theme from './components/theme'\n\n\n\nconst reducers = combineReducers({\n  tasks: tasksReducer,\n  global: globalReducer\n});\n\nconst store = createStore(reducers , applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <ThemeProvider theme={Theme}>\n      <ToastContainer />\n      <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2ob39\",\"header\":\"style_header__3cSl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"style_task__3bI0T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__LL-aa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3phQw\"};"],"sourceRoot":""}